version: '3.9'

networks:
  fnetwork:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.238.0/24
          gateway: 172.19.238.1

services:
  finterra-php-test-job:
    restart: always
    container_name: finterra-yii2-web-app-test-job
    image: finterra-web-app-test-job-img
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        FINTERRA_WEB_CONTAINER_IPv4_HOST: "0.0.0.0"

        FINTERRA_WEB_CONTAINER_DEBIAN_OS_LOCALE: "en_US.UTF-8"
        FINTERRA_WEB_CONTAINER_DEBIAN_OS_TZ: "Europe/Moscow"

        FINTERRA_WEB_CONTAINER_PHP_VERSION: "8.2"
        FINTERRA_WEB_CONTAINER_PHP_DATA_DIR: "/var/lib/php"

        FINTERRA_WEB_CONTAINER_APACHE2_CONF_DIR: "/etc/apache2"

        FINTERRA_WEB_CONTAINER_APACHE2_DOCUMENT_ROOT: "/var/www/yii2-web-app"

        FINTERRA_WEB_CONTAINER_APACHE2_YII2_FRONTEND_FROM_ROOT_PATH: "frontend/web"
        FINTERRA_WEB_CONTAINER_APACHE2_YII2_BACKEND_FROM_ROOT_PATH: "backend/web"

        FINTERRA_WEB_CONTAINER_APACHE2_SERVER_IPv4_YII2_FRONTEND_PORT: "8282"
        FINTERRA_WEB_CONTAINER_APACHE2_SERVER_IPv4_YII2_BACKEND_PORT: "8383"
    networks:
      fnetwork:
        ipv4_address: 172.19.238.10
    ports:
      - "8282:8282"
      - "8383:8383"
    volumes:
      # Path on the host, relative to the Compose file
      - ../yii2-web-app:/var/www/yii2-web-app

#  finterra-dbms-postgresql:
#    image: postgres:12.7
#    container_name: finterra-postgresql{BUILD_TAG}
#    restart: always
#    environment:
#      - POSTGRES_USER=root
#      - POSTGRES_PASSWORD=root
#      - POSTGRES_DB=finterra_db
#      - POSTGRES_HOST_AUTH_METHOD: md5
#    ports:
#      - "172.19.0.2:5432:5432"
#    volumes:
#      - ./pg_data:/var/lib/postgresql/data:rw
#    volumes:
#      - db:/var/lib/mysql
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#    networks:
#      vpcbr:
#        ipv4_address: 172.19.0.2
#    depends_on:
#      - networks
